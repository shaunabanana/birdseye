const path = require('path');
const axios = require('axios').default;

export default class DataLoader {

    // The indexFile is a JSON file generated by /dataset/Sentence Embedding.ipynb
    // The datasetPath is a folder containing the tweets and avatars.
    constructor (datasetPath) {
        this.base = datasetPath;
        this.index = path.join(datasetPath, 'index.json');
    }

    loadData() {
        return new Promise( (resolve, reject) => {
            axios.get(this.index)
            .then(response => {
                console.log(response.data);
                let tweets = response.data.map( tweetData => {
                    return {
                        id: tweetData.id,
                        type: 'tweet',
                        name: tweetData.user_name,
                        handle: tweetData.user_handle,
                        content: tweetData.content,
                        parsed: tweetData.parsed,
                        vector: tweetData.vector,
                        sentiment: tweetData.sentiment,
                        avatar: path.join(this.base, 'avatars', tweetData.avatar),
                        x: Math.random() * window.innerWidth, 
                        y: Math.random() * window.innerHeight,
                        cluster: -1
                    }
                } )

                tweets.forEach(tweet => {
                    tweet.replies = [];
                    response.data.forEach( otherTweet => {
                        if (otherTweet.reply_to === tweet.id) {
                            tweet.replies.push(otherTweet.id);
                        }
                    })
                })
                resolve(tweets.filter(tweet => tweet.replies.length > 0 || tweet.reply_to));
            })
            .catch(response => {
                reject(response);
            })
        });
    }

}